import os
import logging
import random
import asyncio
import timeit
import aiogram
from aiogram.utils.deep_linking import get_start_link, decode_payload
from re import search
from aiogram import Bot, Dispatcher, executor, types, filters
import users
from time import sleep
from datetime import datetime
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import json
import urllib
from io import BytesIO
from PIL import Image
API_TOKEN="5927701926:AAGmbx-su6N5uXbowsZJXkFjE08P4Ci9sQ0"
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

#–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
users.CreateDB()
button1 = InlineKeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å‚úÖ", callback_data="button1")
buttonn1 = InlineKeyboardMarkup().add(button1)
nk2 = InlineKeyboardMarkup(row_width=1)
nk2.add(button1)


@dp.message_handler(commands='start')
async def test(message):
    #–í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Å –±–∞–∑—ã
    users.cursor.execute(f"SELECT * FROM users where id = {message.from_user.id}")
    #–ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    if users.cursor.fetchone() == None:
        #–°–æ—Ö—Ä–∞–Ω—è–µ–º –µ—Å–ª–∏ –Ω–µ—Ç—É
        users.InsertValue(message.from_user.first_name, message.from_user.id)
    #–†–∞–Ω–¥–æ–º–∏–º –≤—ã–∏–≥—Ä—ã—à
        await message.reply("–í—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –≤—Å—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",reply_markup=nk2)
    #–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
    #–û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –±–∞–∑—ã
        users.con.commit()
    else:
            await message.reply(f'‚úÖ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n\n/info - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å', parse_mode='html')

    

@dp.callback_query_handler(lambda c: c.data == "button1")
async def callback_mason_n(callback_query: types.CallbackQuery):
        await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
        await bot.send_message(callback_query.message.chat.id, f"""–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è–ª–∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å ‚úÖ\n\n–ò –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ Mason shop, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä—ã –∫–∞–∫ '–î–æ–∫—Å—ã, –°–Ω–æ—Å—ã —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–æ–≤, –°–ø–æ—Ä—Ç–∏–∫–æ–≤, –ú–∞–Ω—É–∞–ª—ã'\n\n/info - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å""")

photo = 'AgACAgIAAxkBAAEBlnpjuZDjL7B_zoKQ4mPL3_M0ZMKfnQAC0cIxG6fDyEmHmDVP7rVLAAEBAAMCAANzAAMtBA'

button5 = InlineKeyboardButton(text="–¢–æ–≤–∞—Ä—ã üõçÔ∏è", callback_data="button5")
button6 = InlineKeyboardButton(text="–¢–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚ö†Ô∏è", callback_data="button6")
buttonn2 = InlineKeyboardMarkup().add(button5, button6)
n2 = InlineKeyboardMarkup(row_width=1)
n2.add(button5, button6)

@dp.callback_query_handler(lambda c: c.data == "button6")
async def callback_mason_n(callback_query: types.CallbackQuery):
        await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
        await bot.send_message(callback_query.message.chat.id, f"""–ù–∞—à–ª–∏ –æ—à–∏–±–∫—É? –∏–ª–∏ –Ω–µ –ø—Ä–∏—à–µ–ª —Ç–æ–≤–∞—Ä? –ø–∏—à–∏—Ç–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ë–æ—Ç–∞: @Masons_family\n""")



@dp.message_handler(commands=['–∏–Ω—Ñ–∞', '–∏–Ω—Ñ', '–∏–Ω—Ñ–æ', 'info', '—Å—Ç–∞—Ç–∞'], commands_prefix='!./')
async def information(message: types.Message):
    username = message.from_user.username
    balance = users.cursor.execute("SELECT balance from users where id = ?", (message.from_user.id,)).fetchone()
    balance = (balance[0])
    id = message.from_user.id
    name = users.cursor.execute("SELECT name from users where id = ?", (message.from_user.id,)).fetchone()
    name = (name[0])
    await bot.send_message(message.chat.id,f"""
<b>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> {name}
<b>Id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> {id}


<b>üë§ –Æ–∑–µ—Ä–Ω–µ–π–º:</b> @{username} 
<b>üí∞ –ë–∞–ª–∞–Ω—Å</b>: {balance}""",parse_mode = "html", reply_markup=n2)

button7 = InlineKeyboardButton(text="–î–æ–∫—Å", callback_data="button7")
button8 = InlineKeyboardButton(text="–°–≤–∞—Ç",callback_data="button8")
button9 = InlineKeyboardButton(text="–í–∑–ª–æ–º –í–∫ –∏ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–º–∞", callback_data="button9")
button10 = InlineKeyboardButton(text="–î–¥–æ—Å", callback_data="button10")
button11 = InlineKeyboardButton(text="–°–ø–æ—Ä—Ç–∏–∫–∏", callback_data="button11")
button12 = InlineKeyboardButton(text="–°–Ω–æ—Å —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–æ–≤, –≥—Ä—É–ø–ø", callback_data="button12")
button13 = InlineKeyboardButton(text="–°–Ω–æ—Å —Ç–µ–ª–µ–≥—Ä–∞–º–º –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data="button13")

buttonn2 = InlineKeyboardMarkup().add(button7, button8, button9, button10, button11, button12, button13)
n = InlineKeyboardMarkup(row_width=1)
n.add(button7, button8, button9, button10, button11, button12, button13)



@dp.callback_query_handler(lambda c: c.data == "button5")
async def callback_mason_n(callback_query: types.CallbackQuery):
        await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
        await bot.send_message(callback_query.message.chat.id, f"""–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –Ω–∏–∂–µ""", reply_markup=n)

@dp.callback_query_handler(lambda c: c.data == "button7")
async def callback_mason_n(callback_query: types.CallbackQuery):
        await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
        await bot.send_message(callback_query.message.chat.id, f"""–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: 7\n\n1.–î–æ–∫—Å - –Ω–∞—á–∏–Ω–∞—é—â–∏–π = 100 –†—É–±–ª–µ–π\n–°—Ä–µ–¥–Ω–∏–π = 250 –†—É–±–ª–µ–π\n–õ—É—á—à–∏–π = 500 –†—É–±–ª–µ–π\n\nqiwi.com/p/79670068632 - —á—Ç–æ –±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä, –∫–∏–¥–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∏–≤–∏ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º <–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞>""")

@dp.callback_query_handler(lambda c: c.data == "button8")
async def callback_mason_n(callback_query: types.CallbackQuery):
        await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
        await bot.send_message(callback_query.message.chat.id, f"""–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: 8\n\n–°–≤–∞—Ç [ –º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ] 600 —Ä—É–±–ª–µ–π\n–ü–æ—Ö–æ—Ä–æ–Ω–Ω–æ–µ –±—é—Ä–æ= 300 —Ä—É–±–ª–µ–π\n–ú—á—Å = 100 —Ä—É–±–ª–µ–π\n–≠–≤–∞–∫—É–∞—Ü–∏—è –≤–∞—à–µ–≥–æ –∑–¥–∞–Ω–∏—è = 700 —Ä—É–±–ª–µ–π\n\nqiwi.com/p/79670068632 - —á—Ç–æ –±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä, –∫–∏–¥–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∏–≤–∏ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º <–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞> """)

@dp.callback_query_handler(lambda c: c.data == "button9")
async def callback_mason_n(callback_query: types.CallbackQuery):
        await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
        await bot.send_message(callback_query.message.chat.id, f"""–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: 9\n\n–í–∑–ª–æ–º –≤–∫ , –∏–Ω—Å—Ç–∞–≥—Ä–∞–º:\n–í–∫ = 1000 —Ä—É–±–ª–µ–π\n–ò–Ω—Å—Ç–∞–≥—Ä–∞–º= 1300\n\nqiwi.com/p/79670068632 - —á—Ç–æ –±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä, –∫–∏–¥–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∏–≤–∏ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º <–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞>""")


@dp.callback_query_handler(lambda c: c.data == "button10")
async def callback_mason_n(callback_query: types.CallbackQuery):
        await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
        await bot.send_message(callback_query.message.chat.id, f"""–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: 10\n\n–î–¥–æ—Å - —Å–ª–∞–±—ã–π = 250 —Ä—É–±–ª–µ–π\n–°—Ä–µ–¥–Ω–∏–π = 400\n–ú–æ—â–Ω—ã–π = 1000\n\nqiwi.com/p/79670068632 - —á—Ç–æ –±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä, –∫–∏–¥–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∏–≤–∏ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º <–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞>""")

@dp.callback_query_handler(lambda c: c.data == "button11")
async def callback_mason_n(callback_query: types.CallbackQuery):
        await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
        await bot.send_message(callback_query.message.chat.id, f"""–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: 11\n\n–°–ø–æ—Ä—Ç–∏–∫–∏ = 1300 –†—É–±–ª–µ–π\n\nqiwi.com/p/79670068632 - —á—Ç–æ –±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä, –∫–∏–¥–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∏–≤–∏ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º <–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞>""")

  

@dp.callback_query_handler(lambda c: c.data == "button12")
async def callback_mason_r(callback_query: types.CallbackQuery):
        await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
        await bot.send_message(callback_query.message.chat.id, f"""–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: 12\n\n–°–Ω–æ—Å —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∞—É–Ω—Ç–æ–≤ –∏ –∫–∞–Ω–∞–ª–æ–≤ = 600 –†—É–±–ª–µ–π\n\nqiwi.com/p/79670068632 - —á—Ç–æ –±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä, –∫–∏–¥–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∏–≤–∏ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º <–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞>""")




if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)